/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: Inter, ui-sans-serif, system-ui, sans-serif;
    --color-brand-50: #eef6ff;
    --color-brand-100: #daeaff;
    --color-brand-200: #b7d2ff;
    --color-brand-300: #8eb5ff;
    --color-brand-500: #3d63ff;
    --color-brand-600: #2e4ee6;
    --color-brand-700: #253ec0;
    --shadow-soft: 0 10px 30px -12px rgba(0, 0, 0, 0.2);
    --shadow-glow: 0 10px 40px -12px rgba(61, 99, 255, 0.55);
    --bg-radial: radial-gradient(
      1200px 600px at 80% -20%,
      rgba(61, 99, 255, 0.25),
      transparent 60%
    ),
    radial-gradient(
      800px 400px at -10% 10%,
      rgba(244, 63, 94, 0.2),
      transparent 50%
    );
    --bg-hero-gradient: linear-gradient(
    135deg,
    rgba(61, 99, 255, 0.18),
    rgba(244, 63, 94, 0.18)
  );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, var(--font-sans, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"));
    font-feature-settings: var(--default-font-feature-settings, initial);
    font-variation-settings: var(--default-font-variation-settings, initial);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, var(--font-mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace));
    font-feature-settings: var(--default-mono-font-feature-settings, initial);
    font-variation-settings: var(--default-mono-font-variation-settings, initial);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing, 0.25rem) * 0);
  }
  .top-0 {
    top: calc(var(--spacing, 0.25rem) * 0);
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-10 {
    z-index: 10;
  }
  .z-30 {
    z-index: 30;
  }
  .z-50 {
    z-index: 50;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-1 {
    margin-top: calc(var(--spacing, 0.25rem) * 1);
  }
  .mt-3 {
    margin-top: calc(var(--spacing, 0.25rem) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing, 0.25rem) * 4);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing, 0.25rem) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing, 0.25rem) * 3);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .\!h-9 {
    height: calc(var(--spacing, 0.25rem) * 9) !important;
  }
  .h-4 {
    height: calc(var(--spacing, 0.25rem) * 4);
  }
  .h-5 {
    height: calc(var(--spacing, 0.25rem) * 5);
  }
  .h-8 {
    height: calc(var(--spacing, 0.25rem) * 8);
  }
  .h-10 {
    height: calc(var(--spacing, 0.25rem) * 10);
  }
  .h-48 {
    height: calc(var(--spacing, 0.25rem) * 48);
  }
  .h-56 {
    height: calc(var(--spacing, 0.25rem) * 56);
  }
  .h-full {
    height: 100%;
  }
  .h-max {
    height: max-content;
  }
  .max-h-\[480px\] {
    max-height: 480px;
  }
  .min-h-\[360px\] {
    min-height: 360px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-4 {
    width: calc(var(--spacing, 0.25rem) * 4);
  }
  .w-5 {
    width: calc(var(--spacing, 0.25rem) * 5);
  }
  .w-8 {
    width: calc(var(--spacing, 0.25rem) * 8);
  }
  .w-10 {
    width: calc(var(--spacing, 0.25rem) * 10);
  }
  .w-40 {
    width: calc(var(--spacing, 0.25rem) * 40);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .max-w-7xl {
    max-width: var(--container-7xl, 80rem);
  }
  .max-w-lg {
    max-width: var(--container-lg, 32rem);
  }
  .min-w-0 {
    min-width: calc(var(--spacing, 0.25rem) * 0);
  }
  .flex-1 {
    flex: 1;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing, 0.25rem) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing, 0.25rem) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing, 0.25rem) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing, 0.25rem) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing, 0.25rem) * 6);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing, 0.25rem) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing, 0.25rem) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing, 0.25rem) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing, 0.25rem) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl, 1rem);
  }
  .rounded-lg {
    border-radius: var(--radius-lg, 0.5rem);
  }
  .rounded-md {
    border-radius: var(--radius-md, 0.375rem);
  }
  .rounded-xl {
    border-radius: var(--radius-xl, 0.75rem);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200, oklch(92.2% 0 0));
  }
  .bg-black\/40 {
    background-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black, #000) 40%, transparent);
    }
  }
  .bg-brand-500\/10 {
    background-color: color-mix(in srgb, #3d63ff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-brand-500) 10%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white, #fff);
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white, #fff) 60%, transparent);
    }
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white, #fff) 70%, transparent);
    }
  }
  .bg-radial {
    --tw-gradient-position: in oklab;
    background-image: radial-gradient(var(--tw-gradient-stops));
  }
  .object-cover {
    object-fit: cover;
  }
  .\!p-2 {
    padding: calc(var(--spacing, 0.25rem) * 2) !important;
  }
  .p-4 {
    padding: calc(var(--spacing, 0.25rem) * 4);
  }
  .\!px-2 {
    padding-inline: calc(var(--spacing, 0.25rem) * 2) !important;
  }
  .\!px-3 {
    padding-inline: calc(var(--spacing, 0.25rem) * 3) !important;
  }
  .px-3 {
    padding-inline: calc(var(--spacing, 0.25rem) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing, 0.25rem) * 4);
  }
  .\!py-1 {
    padding-block: calc(var(--spacing, 0.25rem) * 1) !important;
  }
  .\!py-1\.5 {
    padding-block: calc(var(--spacing, 0.25rem) * 1.5) !important;
  }
  .\!py-2 {
    padding-block: calc(var(--spacing, 0.25rem) * 2) !important;
  }
  .py-2 {
    padding-block: calc(var(--spacing, 0.25rem) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing, 0.25rem) * 3);
  }
  .py-6 {
    padding-block: calc(var(--spacing, 0.25rem) * 6);
  }
  .py-10 {
    padding-block: calc(var(--spacing, 0.25rem) * 10);
  }
  .text-center {
    text-align: center;
  }
  .font-mono {
    font-family: var(--font-mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace);
  }
  .text-2xl {
    font-size: var(--text-2xl, 1.5rem);
    line-height: var(--tw-leading, var(--text-2xl--line-height, calc(2 / 1.5)));
  }
  .text-lg {
    font-size: var(--text-lg, 1.125rem);
    line-height: var(--tw-leading, var(--text-lg--line-height, calc(1.75 / 1.125)));
  }
  .text-sm {
    font-size: var(--text-sm, 0.875rem);
    line-height: var(--tw-leading, var(--text-sm--line-height, calc(1.25 / 0.875)));
  }
  .text-xl {
    font-size: var(--text-xl, 1.25rem);
    line-height: var(--tw-leading, var(--text-xl--line-height, calc(1.75 / 1.25)));
  }
  .text-xs {
    font-size: var(--text-xs, 0.75rem);
    line-height: var(--tw-leading, var(--text-xs--line-height, calc(1 / 0.75)));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold, 700);
    font-weight: var(--font-weight-bold, 700);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold, 800);
    font-weight: var(--font-weight-extrabold, 800);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium, 500);
    font-weight: var(--font-weight-medium, 500);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold, 600);
    font-weight: var(--font-weight-semibold, 600);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight, -0.025em);
    letter-spacing: var(--tracking-tight, -0.025em);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .text-brand-600 {
    color: var(--color-brand-600);
  }
  .text-brand-700 {
    color: var(--color-brand-700);
  }
  .text-emerald-600 {
    color: var(--color-emerald-600, oklch(59.6% 0.145 163.225));
  }
  .text-neutral-400 {
    color: var(--color-neutral-400, oklch(70.8% 0 0));
  }
  .text-neutral-500 {
    color: var(--color-neutral-500, oklch(55.6% 0 0));
  }
  .text-neutral-600 {
    color: var(--color-neutral-600, oklch(43.9% 0 0));
  }
  .text-neutral-700 {
    color: var(--color-neutral-700, oklch(37.1% 0 0));
  }
  .capitalize {
    text-transform: capitalize;
  }
  .opacity-30 {
    opacity: 30%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl, 64px));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md, 12px));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function, cubic-bezier(0.4, 0, 0.2, 1)));
    transition-duration: var(--tw-duration, var(--default-transition-duration, 150ms));
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .group-hover\:text-neutral-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-neutral-700, oklch(37.1% 0 0));
      }
    }
  }
  .placeholder\:text-neutral-400 {
    &::placeholder {
      color: var(--color-neutral-400, oklch(70.8% 0 0));
    }
  }
  .hover\:bg-neutral-50\/60 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(98.5% 0 0) 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-50, oklch(98.5% 0 0)) 60%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white, #fff) 50%, transparent);
        }
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:shadow-soft {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 30px -12px var(--tw-shadow-color, rgba(0, 0, 0, 0.2));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-\[1fr_200px_160px_160px\] {
    @media (width >= 48rem) {
      grid-template-columns: 1fr 200px 160px 160px;
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl, 1.875rem);
      line-height: var(--tw-leading, var(--text-3xl--line-height, calc(2.25 / 1.875)));
    }
  }
  .lg\:sticky {
    @media (width >= 64rem) {
      position: sticky;
    }
  }
  .lg\:top-4 {
    @media (width >= 64rem) {
      top: calc(var(--spacing, 0.25rem) * 4);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-\[260px_1fr\] {
    @media (width >= 64rem) {
      grid-template-columns: 260px 1fr;
    }
  }
  .dark\:border-neutral-800 {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-neutral-800, oklch(26.9% 0 0));
    }
  }
  .dark\:bg-neutral-900\/40 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900, oklch(20.5% 0 0)) 40%, transparent);
      }
    }
  }
  .dark\:bg-neutral-900\/50 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900, oklch(20.5% 0 0)) 50%, transparent);
      }
    }
  }
  .dark\:text-brand-200 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-brand-200);
    }
  }
  .dark\:text-brand-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-brand-300);
    }
  }
  .dark\:text-neutral-200 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-200, oklch(92.2% 0 0));
    }
  }
  .dark\:text-neutral-300 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-300, oklch(87% 0 0));
    }
  }
  .dark\:group-hover\:text-neutral-200 {
    @media (prefers-color-scheme: dark) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-neutral-200, oklch(92.2% 0 0));
        }
      }
    }
  }
  .dark\:hover\:bg-white\/5 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #fff 5%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-white, #fff) 5%, transparent);
          }
        }
      }
    }
  }
}
html, body, #root {
  height: 100%;
}
body {
  background-color: var(--color-white, #fff);
  font-family: var(--font-sans);
  color: var(--color-neutral-900, oklch(20.5% 0 0));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  @media (prefers-color-scheme: dark) {
    background-color: var(--color-neutral-950, oklch(14.5% 0 0));
  }
  @media (prefers-color-scheme: dark) {
    color: var(--color-neutral-100, oklch(97% 0 0));
  }
}
.bg-radial {
  background-image: var(--bg-radial);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
.bg-hero-gradient {
  background-image: var(--bg-hero-gradient);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
.card {
  border-radius: var(--radius-2xl, 1rem);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: color-mix(in srgb, #fff 40%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-white, #fff) 40%, transparent);
  }
  background-color: color-mix(in srgb, #fff 70%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white, #fff) 70%, transparent);
  }
  --tw-backdrop-blur: blur(var(--blur-md, 12px));
  -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  @media (prefers-color-scheme: dark) {
    border-color: color-mix(in srgb, #fff 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white, #fff) 10%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in srgb, oklch(20.5% 0 0) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-900, oklch(20.5% 0 0)) 50%, transparent);
    }
  }
  box-shadow: var(--shadow-soft);
  padding: calc(var(--spacing, 0.25rem) * 5);
}
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing, 0.25rem) * 2);
  border-radius: var(--radius-xl, 0.75rem);
  background-color: var(--color-brand-500);
  padding-inline: calc(var(--spacing, 0.25rem) * 4);
  padding-block: calc(var(--spacing, 0.25rem) * 2);
  --tw-font-weight: var(--font-weight-medium, 500);
  font-weight: var(--font-weight-medium, 500);
  color: var(--color-white, #fff);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function, cubic-bezier(0.4, 0, 0.2, 1)));
  transition-duration: var(--tw-duration, var(--default-transition-duration, 150ms));
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-brand-600);
    }
  }
  box-shadow: var(--shadow-glow);
}
.btn-outline {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing, 0.25rem) * 2);
  border-radius: var(--radius-xl, 0.75rem);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-brand-500);
  padding-inline: calc(var(--spacing, 0.25rem) * 4);
  padding-block: calc(var(--spacing, 0.25rem) * 2);
  --tw-font-weight: var(--font-weight-medium, 500);
  font-weight: var(--font-weight-medium, 500);
  color: var(--color-brand-600);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function, cubic-bezier(0.4, 0, 0.2, 1)));
  transition-duration: var(--tw-duration, var(--default-transition-duration, 150ms));
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-brand-50);
    }
  }
  @media (prefers-color-scheme: dark) {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white, #fff) 5%, transparent);
        }
      }
    }
  }
}
.badge {
  display: inline-block;
  border-radius: calc(infinity * 1px);
  background-color: var(--color-brand-100);
  padding-inline: calc(var(--spacing, 0.25rem) * 2.5);
  padding-block: calc(var(--spacing, 0.25rem) * 0.5);
  font-size: var(--text-xs, 0.75rem);
  line-height: var(--tw-leading, var(--text-xs--line-height, calc(1 / 0.75)));
  --tw-font-weight: var(--font-weight-semibold, 600);
  font-weight: var(--font-weight-semibold, 600);
  color: var(--color-brand-700);
}
.input {
  width: 100%;
  border-radius: var(--radius-xl, 0.75rem);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-neutral-200, oklch(92.2% 0 0));
  background-color: color-mix(in srgb, #fff 80%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-white, #fff) 80%, transparent);
  }
  padding-inline: calc(var(--spacing, 0.25rem) * 3);
  padding-block: calc(var(--spacing, 0.25rem) * 2);
  --tw-ring-color: var(--color-brand-200);
  --tw-outline-style: none;
  outline-style: none;
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-neutral-800, oklch(26.9% 0 0));
  }
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in srgb, oklch(20.5% 0 0) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-900, oklch(20.5% 0 0)) 60%, transparent);
    }
  }
  @media (prefers-color-scheme: dark) {
    --tw-ring-color: color-mix(in srgb, #253ec0 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-brand-700) 30%, transparent);
    }
  }
}
.table {
  width: 100%;
  border-collapse: collapse;
  overflow: hidden;
  border-radius: var(--radius-2xl, 1rem);
}
.table thead th {
  background-color: var(--color-neutral-50, oklch(98.5% 0 0));
  padding-inline: calc(var(--spacing, 0.25rem) * 4);
  padding-block: calc(var(--spacing, 0.25rem) * 3);
  text-align: left;
  font-size: var(--text-sm, 0.875rem);
  line-height: var(--tw-leading, var(--text-sm--line-height, calc(1.25 / 0.875)));
  --tw-font-weight: var(--font-weight-semibold, 600);
  font-weight: var(--font-weight-semibold, 600);
  @media (prefers-color-scheme: dark) {
    background-color: color-mix(in srgb, oklch(20.5% 0 0) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-900, oklch(20.5% 0 0)) 60%, transparent);
    }
  }
}
.table tbody td {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  border-color: var(--color-neutral-100, oklch(97% 0 0));
  padding-inline: calc(var(--spacing, 0.25rem) * 4);
  padding-block: calc(var(--spacing, 0.25rem) * 3);
  font-size: var(--text-sm, 0.875rem);
  line-height: var(--tw-leading, var(--text-sm--line-height, calc(1.25 / 0.875)));
  @media (prefers-color-scheme: dark) {
    border-color: var(--color-neutral-800, oklch(26.9% 0 0));
  }
}
@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}
@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
